# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Set variables 
variables:
  a: mh
  b: $(Rev:.r)
  c: $(Build.SourceVersion)
  dockerId: mhrckr
  imageName: realwordInterview


name: $(a)_$(Rev:.r)_$(Build.SourceVersion)

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

steps:

- script: sudo apt-get update
  displayName: 'Perform update'

- script: sudo apt-get install --no-upgrade libboost-all-dev 
  displayName: 'Install dependency'

- script: g++ -std=c++11 -I/usr/include/boost/asio -I/usr/include/boost -o binary.out main.cpp connection.cpp connection_manager.cpp mime_types.cpp reply.cpp request_handler.cpp request_parser.cpp server.cpp -lboost_system -lboost_thread -lpthread
  displayName: 'Build Program'


- script: touch readme.txt
  displayName: 'Create readme.txt file '

- script: echo $(a)_$(b)_$(c) >> readme.txt
  displayName: 'Copy build name to readme.txt'

- script: cat readme.txt
  displayName: 'Display readme.txt'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(build.SourcesDirectory)'
    Contents: |
     *.out
     readme.txt
    targetFolder: $(build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(build.ArtifactStagingDirectory)
    artifactName: MyBuildOutput

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'MyBuildOutput'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: mhtestregistry.azurecr.io

- script: docker login -u $(dockerId) -p $(Missu123) 

# - task: Docker@2
#   displayName: Build and Push
#   inputs:
#     command: buildAndPush
#     containerRegistry: dockerRegistryServiceConnection1
#     repository: $(build.ArtifactStagingDirectory)
#     tags: |
#       tag1
#       tag2
# - script: |
#     docker build -t $(dockerId)/$(imageName) .
#     docker push $(dockerId/test)/$(imageName)

